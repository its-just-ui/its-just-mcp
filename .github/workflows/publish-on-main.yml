name: Publish on main

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: publish-main
  cancel-in-progress: false

jobs:
  publish:
    if: ${{ github.actor != 'github-actions[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Auto bump if current version exists on npm
        id: bump
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          PKG=$(node -p "require('./package.json').name")
          VER=$(node -p "require('./package.json').version")
          echo "Package: $PKG, Current version: $VER"
          PUBLISHED=$(npm view "$PKG" versions --json || echo '[]')
          echo "Published versions: $PUBLISHED"
          if echo "$PUBLISHED" | grep -q '"'"$VER"'"'; then
            echo "Current version already on npm. Bumping patch..."
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            NEW_VER=$(npm version patch -m "chore: release %s [skip ci]")
            echo "New version: $NEW_VER"
            git push --follow-tags origin HEAD:main
            echo "version=${NEW_VER#v}" >> "$GITHUB_OUTPUT"
          else
            echo "version=$VER" >> "$GITHUB_OUTPUT"
          fi

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

