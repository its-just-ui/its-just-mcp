name: Auto Version & Publish

on:
  push:
    branches:
      - main

jobs:
  version-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          always-auth: true

      - name: Configure Git (with noreply email)
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Install dependencies
        run: npm ci

      - name: Determine version bump type
        id: bump-type
        run: |
          VERSION_TYPE="patch"
          if [ "$(git rev-list --merges -n 1 HEAD)" == "$(git rev-parse HEAD)" ]; then
            PR_NUMBER=$(git log -1 --pretty=%B | grep -oP '#\K\d+' | head -1)
            if [ ! -z "$PR_NUMBER" ]; then
              LABELS=$(curl -s \
                -H "Authorization: token ${{ secrets.GH_PAT }}" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}" \
                | jq -r '.labels[].name' | tr '\n' ' ')
              if [[ "$LABELS" == *"major"* ]]; then
                VERSION_TYPE="major"
              elif [[ "$LABELS" == *"minor"* ]]; then
                VERSION_TYPE="minor"
              elif [[ "$LABELS" == *"patch"* ]]; then
                VERSION_TYPE="patch"
              fi
            fi
          fi
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ "$COMMIT_MSG" == *"BREAKING CHANGE"* ]] || [[ "$COMMIT_MSG" == *"!"* ]]; then
            VERSION_TYPE="major"
          elif [[ "$COMMIT_MSG" == *"feat:"* ]] || [[ "$COMMIT_MSG" == *"feat("* ]]; then
            VERSION_TYPE="minor"
          fi
          echo "type=$VERSION_TYPE" >> $GITHUB_OUTPUT

      - name: Get current version
        id: check-version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Bump version
        id: version-bump
        run: |
          npm version ${{ steps.bump-type.outputs.type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit version bump
        run: |
          git add package.json package-lock.json
          git commit -m "chore: release v${{ steps.version-bump.outputs.new_version }} [skip ci]"

      - name: Push changes and tag using GH_PAT
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          TAG: v${{ steps.version-bump.outputs.new_version }}
        run: |
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git
          git push origin HEAD:main
          git tag -d $TAG 2>/dev/null || true
          git push origin :refs/tags/$TAG 2>/dev/null || true
          git tag $TAG
          git push origin $TAG

      - name: Test
        run: npm test

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version-bump.outputs.new_version }}
          release_name: Release v${{ steps.version-bump.outputs.new_version }}
          body: |
            ## What's Changed
            Version bump type: ${{ steps.bump-type.outputs.type }}
            Previous version: ${{ steps.check-version.outputs.current_version }}
            New version: ${{ steps.version-bump.outputs.new_version }}
            See [commit history](https://github.com/${{ github.repository }}/compare/v${{ steps.check-version.outputs.current_version }}...v${{ steps.version-bump.outputs.new_version }}) for details.
          draft: false
          prerelease: false

